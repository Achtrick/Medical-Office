<?php

namespace AppBundle\Controller;

use AppBundle\Entity\RDV;
use AppBundle\Entity\User;
use AppBundle\Entity\Mutuelle;
use AppBundle\Entity\Consultation;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Console\Question\ConfirmationQuestion;

class CabinetController extends Controller
{

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    /**
     * @Route("/", name="Home")
     */
    public function listAction()
    {

    $user = $securityContext = $this->container->get('security.authorization_checker');
    if ($securityContext->isGranted('IS_AUTHENTICATED_REMEMBERED')) {

        $userRole = $this->getUser()->getRoles();        
        if (in_array("ROLE_ADMIN", $userRole)) {
            return $this->redirect("/admin/");
        } elseif (in_array("ROLE_ASSISTANT", $userRole)) {
            return $this->redirect("/Cabinet/Administration");
        } elseif (in_array("ROLE_DOCTOR", $userRole)) {
            return $this->redirect("/Cabinet/Administration");
        }
    } else {
    	return $this->render('Cabinet/home.html.twig' , array());
  }
  return $this->render('Cabinet/home.html.twig' , array());
}



    /**
     * @Route("/Cabinet/Administration", name="Cabinetadmin")
     */
    public function ShowAction()
    {
        return $this->render('Cabinet/CabinetAdmin.html.twig' , array());
    }

    /**
     * @Route("/Cabinet/Administration/Gestionrdv", name="Gestionrdv")
     */
    public function GestionrdvAction()
    {

        $rdvs = $this->getDoctrine()
        ->getRepository('AppBundle:RDV')
        ->findAll();

        return $this->render('Cabinet/gestionrdv.html.twig' , array(
        'rdvs'=>$rdvs
        ));
    }

     /**
     * @Route("/Cabinet/Administration/Gestionrdv/edit/{id}", name="editrdv")
     */
    public function EditrdvAction($id, Request $request)
    {
        $rdv = $this->getDoctrine()->getRepository('AppBundle:RDV')->find($id);

                $rdv->setPrenom($rdv->getPrenom());
                $rdv->setNom($rdv->getNom());
                $rdv->setCin($rdv->getCin());
                $rdv->setNumTel($rdv->getNumTel());
                $rdv->setDateRdv($rdv->getDateRdv());
                $rdv->setSeance($rdv->getSeance());

        $form = $this->createFormBuilder($rdv)
              ->add('prenom', TextType::class, array('attr' => array('class' => 'form-control' , 'disabled' => 'true' , 'style' => 'margin-bottom:15px')))
              ->add('nom', TextType::class, array('attr' => array('class' => 'form-control' , 'disabled' => 'true' , 'style' => 'margin-bottom:15px'))) 
              ->add('cin', TextType::class, array('attr' => array('class' => 'form-control', 'disabled' => 'true' , 'style' => 'margin-bottom:15px'))) 
              ->add('num_tel', TextType::class, array('attr' => array('class' => 'form-control', 'placeholder' => 'Numéro de téléphone' , 'disabled' => 'true' , 'style' => 'margin-bottom:15px')))
              ->add('date_rdv', DateType::class, array('input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
              ->add('seance',ChoiceType::class, array('label' => 'Séance', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('Séance 1' => 'S1' ,'Séance 2' => 'S2','Séance 3' => 'S3','Séance 4 ' => 'S4','Séance 5' => 'S5','Séance 6' => 'S6','Séance 7' => 'S7','Séance 8' => 'S8'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
              ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
              ->getForm();
              
              $form ->handleRequest($request);

              if($form->isSubmitted() && $form->isValid()){

                $prenom = $form['prenom']->getData();
                $nom = $form['nom']->getData();
                $cin = $form['cin']->getData();
                $num_tel = $form['num_tel']->getData();
                $date_rdv = $form['date_rdv']->getData();
                $seance = $form['seance']->getData();

                $em = $this -> getDoctrine() -> getManager();
                $rdv = $em -> getRepository('AppBundle:RDV')->find($id);

                $em1 = $this->getDoctrine()->getManager();
                $RAW_QUERY1 = 'SELECT r_d_v.seance FROM r_d_v WHERE r_d_v.date_rdv = :d ;';
                $statement1 = $em1->getConnection()->prepare($RAW_QUERY1);
                $statement1->bindValue('d', $date_rdv);
                $statement1->execute();
                $result1 = $statement1->fetchAll();

                $sv = true ;

                foreach ($result1 as $key => $value) {
                if (in_array($seance, $value)){
                    $sv = false ;
                }
            }

                if ($sv == false) {
                    $this->addFlash(
                    'notice',
                    'Cette séance est déjas réserver !'
                    );
                }else{

                $rdv->setPrenom($prenom);
                $rdv->setNom($nom);
                $rdv->setCin($cin);
                $rdv->setNumTel($num_tel);
                $rdv->setDateRdv($date_rdv);
                $rdv->setSeance($seance);

               
                $em->flush();
                $this->addFlash(
                   'notice',
                   'Rendez-vous modifié avec succès'
                );

                return $this->redirectToRoute('Gestionrdv');

            }
        }  

        return $this->render('Cabinet/editrdv.html.twig' , array(
        'rdv'=>$rdv,
        'form'=>$form->createView()
        ));
    }


     /**
     * @Route("/Cabinet/Administration/Gestionrdv/delete/{id}", name="deleterdv")
     */
    public function DeleterdvAction($id)
    {
      $em = $this -> getDoctrine() -> getManager();
      $rdv = $em -> getRepository('AppBundle:RDV')->find($id);
      $em->remove($rdv);
      $em->flush();
      $this->addFlash(
      'notice',
      'Rendez-vous été supprimer avec succès'
      );
      return $this->redirectToRoute('Gestionrdv');      
    }

    /**
     * @Route("/Cabinet/Administration/Gestionrdv/créer", name="créerrdv")
     */
    public function CréerrdvAction(Request $request)
    {

            $rdv = new RDV;
            $form = $this->createFormBuilder($rdv)
              ->add('prenom', TextType::class, array('attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px')))
              ->add('nom', TextType::class, array('attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'))) 
              ->add('cin', TextType::class, array('attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'))) 
              ->add('num_tel', TextType::class, array('attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
              ->add('date_rdv', DateType::class, array('input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
              ->add('seance',ChoiceType::class, array('label' => 'Séance', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('Séance 1' => 'S1' ,'Séance 2' => 'S2','Séance 3' => 'S3','Séance 4 ' => 'S4','Séance 5' => 'S5','Séance 6' => 'S6','Séance 7' => 'S7','Séance 8' => 'S8'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
              ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
              ->getForm();
              
              $form ->handleRequest($request);

              if($form->isSubmitted() && $form->isValid()){
                
                $prenom = $form['prenom']->getData();
                $nom = $form['nom']->getData();
                $cin = $form['cin']->getData();
                $num_tel = $form['num_tel']->getData();
                $date_rdv = $form['date_rdv']->getData();
                $seance = $form['seance']->getData();

                $em1 = $this->getDoctrine()->getManager();
                $RAW_QUERY1 = 'SELECT r_d_v.seance FROM r_d_v WHERE r_d_v.date_rdv = :d ;';
                $statement1 = $em1->getConnection()->prepare($RAW_QUERY1);
                $statement1->bindValue('d', $date_rdv);
                $statement1->execute();
                $result1 = $statement1->fetchAll();

                $sv = true ;

                foreach ($result1 as $key => $value) {
                if (in_array($seance, $value)){
                    $sv = false ;
                }
            }

                if ($sv == false) {
                    $this->addFlash(
                    'notice',
                    'Cette séance est déjas réserver !'
                    );
                }else{

                $rdv->setPrenom($prenom);
                $rdv->setNom($nom);
                $rdv->setCin($cin);
                $rdv->setNumTel($num_tel);
                $rdv->setDateRdv($date_rdv);
                $rdv->setSeance($seance);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($rdv);
                $em->flush();

                $this->addFlash(
                'notice',
                'Rendez-vous crée avec succès'
                );
                return $this->redirectToRoute('Gestionrdv');
                }

        return $this->render('Cabinet/créerrdv.html.twig', array(
            'form' => $form->createView()
             ));
        }
                return $this->render('Cabinet/créerrdv.html.twig', array(
            'form' => $form->createView()
             ));
    }

    /**
     * @Route("/Cabinet/Administration/Gestionmutuelle", name="Gestionmutuelle")
     */
    public function GestionmutuelleAction()
    {
        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM fos_user where fos_user.cin <> :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', '');
        $statement->execute();
        $users = $statement->fetchAll();

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM mutuelle ;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->execute();
        $mutuelles = $statement->fetchAll();

        return $this->render('Cabinet/gestionmutuelle.html.twig' , array(
        'users'=>$users, 'mutuelles' => $mutuelles
        ));
    }

    /**
     * @Route("/Cabinet/Administration/Gestionmutuelle/créer/{id}", name="créermutuelle")
     */
    public function CréermutuelleAction($id, Request $request)
    {
        $user = $this->getDoctrine()
        ->getRepository('AppBundle:User')
        ->find($id);

        $mutuelle = new Mutuelle;
        $form = $this->createFormBuilder($mutuelle)
        ->add('caisse',ChoiceType::class, array('label' => 'Caisse', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('CNSS' => 'CNSS' ,'CNAM' => 'CNAM', 'CNRPS' => 'CNRPS'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
        ->add('valide', DateType::class, array('label' => 'Valide de','input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
        ->add('a', DateType::class, array('label' => 'à','input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
        ->add('Identificateur', TextType::class, array('attr' => array('placeholder' => '123456789123', 'class' => 'form-control' , 'style' => 'margin-bottom:15px')))            
        ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
        ->getForm();
              
        $form ->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){
                
        $prenom = $user->getPrenom();
        $nom = $user->getNom();
        $cin = $user->getCin();
        $caisse = $form['caisse']->getData();
        $identificateur = $form['Identificateur']->getData();
        $valide = $form['valide']->getData();
        $a = $form['a']->getData();

        $mutuelle->setPrenom($prenom);
        $mutuelle->setNom($nom);
        $mutuelle->setCin($cin);
        $mutuelle->setCaisse($caisse);
        $mutuelle->setValide($valide);
        $mutuelle->setA($a);
        $mutuelle->setIdentificateur($identificateur);
        $user->setM('YES');

        $em = $this -> getDoctrine() -> getManager();
        $em->persist($mutuelle);
        $em->flush();

        $this->addFlash(
        'notice',
        'Mutuelle crée avec succès'
        );
        return $this->redirectToRoute('Gestionmutuelle');
        }
        return $this->render('Cabinet/créermutuelle.html.twig', array(
        'form' => $form->createView()
        ));
        }

    /**
     * @Route("/Cabinet/Administration/Gestionmutuelle/edit/{id}", name="editmutuelle")
     */
    public function EditmutuelleAction($id, Request $request)
    {
        $user = $this->getDoctrine()
        ->getRepository('AppBundle:User')
        ->find($id);

        $c = $user -> getCin();


        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM mutuelle where mutuelle.cin = :c ;';
        $statement = $em->getConnection()->prepare($RAW_QUERY); 
        $statement->bindValue('c', $c);
        $statement->execute();
        $result = $statement->fetchAll();

        foreach ($result as $key => $value) {
            foreach ($value as $key1 => $value1) {
                $idm = $value['id'];
            }
        }

        $mutuelle = $this->getDoctrine()
        ->getRepository('AppBundle:Mutuelle')
        ->find($idm);

        $mutuelle->setPrenom($mutuelle->getPrenom());
        $mutuelle->setNom($mutuelle->getNom());
        $mutuelle->setCin($mutuelle->getCin());
        $mutuelle->setValide($mutuelle->getValide());
        $mutuelle->setA($mutuelle->getA());
        $mutuelle->setIdentificateur($mutuelle->getIdentificateur());

        $form = $this->createFormBuilder($mutuelle)
        ->add('caisse',ChoiceType::class, array('label' => 'Caisse', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('CNSS' => 'CNSS' ,'CNAM' => 'CNAM', 'CNRPS' => 'CNRPS'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
        ->add('valide', DateType::class, array('label' => 'Valide de','input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
        ->add('a', DateType::class, array('label' => 'à','input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
        ->add('Identificateur', TextType::class, array('attr' => array('placeholder' => '123456789123', 'class' => 'form-control' , 'style' => 'margin-bottom:15px')))            
        ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
        ->getForm();
              
        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){
                
        $prenom = $user->getPrenom();
        $nom = $user->getNom();
        $cin = $user->getCin();
        $caisse = $form['caisse']->getData();
        $identificateur = $form['Identificateur']->getData();
        $valide = $form['valide']->getData();
        $a = $form['a']->getData();

        $mutuelle->setPrenom($prenom);
        $mutuelle->setNom($nom);
        $mutuelle->setCin($cin);
        $mutuelle->setCaisse($caisse);
        $mutuelle->setValide($valide);
        $mutuelle->setA($a);
        $mutuelle->setIdentificateur($identificateur);

        $em = $this -> getDoctrine() -> getManager();
        $em->persist($mutuelle);
        $em->flush();

        $this->addFlash(
        'notice',
        'Mutuelle modifié avec succès'
        );
        return $this->redirectToRoute('Gestionmutuelle');
        }
        return $this->render('Cabinet/editmutuelle.html.twig', array(
        'form' => $form->createView()
        ));
        }

    /**
     * @Route("/Cabinet/Administration/Gestionmutuelle/delete/{id}", name="deletemutuelle")
     */
    public function DeletemutuelleAction($id, Request $request)
    {
        $user = $this->getDoctrine()
        ->getRepository('AppBundle:User')
        ->find($id);

        $user->setM($user->getM());
        $user->setM('NO');
        $em = $this -> getDoctrine() -> getManager();
        $em->persist($user);
        $em->flush();

        $c = $user -> getCin();

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM mutuelle where mutuelle.cin = :c ;';
        $statement = $em->getConnection()->prepare($RAW_QUERY); 
        $statement->bindValue('c', $c);
        $statement->execute();
        $result = $statement->fetchAll();

        foreach ($result as $key => $value) {
            foreach ($value as $key1 => $value1) {
                $idm = $value['id'];
            }
        }

       $em = $this -> getDoctrine() -> getManager();
       $mutuelle = $em -> getRepository('AppBundle:Mutuelle')->find($idm);
       $em->remove($mutuelle);
       $em->flush();

      $this->addFlash(
      'notice',
      'Mutuelle été supprimer avec succès'
      );
      return $this->redirectToRoute('Gestionmutuelle');

    }

    /**
     * @Route("/Cabinet/Administration/Gestionfiche", name="Gestionfiche")
     */
    public function GestionficheAction()
    {

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM fos_user where fos_user.cin <> :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', '');
        $statement->execute();
        $users = $statement->fetchAll();

        return $this->render('Cabinet/gestionfiche.html.twig' , array(
        'users'=>$users
        ));

    }

    /**
     * @Route("/Cabinet/Administration/Gestionfiche/voir/{id}", name="voirfiche")
     */
    public function VoirficheAction($id)
    {

        $user = $this->getDoctrine()
        ->getRepository('AppBundle:User')
        ->find($id);

        $c = $user->getCin();

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM mutuelle where mutuelle.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $c);
        $statement->execute();
        $result = $statement->fetchAll();

        foreach ($result as $key => $value) {
            foreach ($value as $key1 => $value1) {
                $mutuelle=$value;
            }
        }

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM consultation where consultation.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $c);
        $statement->execute();
        $consultations = $statement->fetchAll();



        return $this->render('Cabinet/voirfiche.html.twig' , array(
        'user'=>$user, 'mutuelle' => $mutuelle, 'consultations'=>$consultations
        ));

    }
    
    /**
     * @Route("/Cabinet/Administration/Gestionconsultation", name="Gestionconsultation")
     */
    public function GestionconsultationAction()
    {
        $users = $this->getDoctrine()
        ->getRepository('AppBundle:RDV')
        ->findAll();

        return $this->render('Cabinet/gestionconsultation.html.twig' , array(
        'users'=>$users
        ));
    }


    /**
     * @Route("/Cabinet/Administration/Gestionconsultation/créer/{id}", name="créerconsultation")
     */
    public function CréerconsultationAction($id, Request $request)
    {
        $user = $this->getDoctrine()
        ->getRepository('AppBundle:RDV')
        ->find($id);       

        $date = $user->getDateRdv();
        $consultation = new Consultation;

        $form = $this->createFormBuilder($consultation)
        ->add('type',ChoiceType::class, array('label' => 'Type', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('Examen' => 'Examen' ,'Controle' => 'Controle', 'Traitement' => 'Traitement'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
        ->add('date_consult', TextType::class, array('label' => 'Date','attr' => array('class' => 'form-control', 'placeholder' => $date, 'disabled' => 'true', 'style' => 'margin-bottom:15px')))
        ->add('maladie', TextType::class, array('attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px')))
        ->add('description', TextareaType::class, array('attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px')))     
        ->add('file', FileType::class, array('label' => 'Fichiers', 'attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px'),'required' => false))       
        ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
        ->getForm();
              
        $form ->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){

        $cin = $user->getCin();
        $type = $form['type']->getData();
        $description = $form['description']->getData();
        $maladie = $form['maladie']->getData();
        $file = $consultation->getFile();

            if ($file <> null){
                /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
                $file->move(
                $this->getParameter('files_directory'),
                $fileName);
                $consultation->setFile($fileName);
                $consultation->setCin($cin);
                $consultation->setDateConsult($date);
                $consultation->setMaladie($maladie);
                $consultation->setDescription($description);
                $consultation->setType($type);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($consultation);
                $em->flush();

                $em = $this -> getDoctrine() -> getManager();
                $rdv = $em -> getRepository('AppBundle:RDV')->find($id);
                $em->remove($rdv);
                $em->flush();
                $this->addFlash(
                'notice',
                'Consultation crée avec succès'
                );
                return $this->redirectToRoute('Gestionconsultation');

            }else{

                $consultation->setCin($cin);
                $consultation->setDateConsult($date);
                $consultation->setMaladie($maladie);
                $consultation->setDescription($description);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($consultation);
                $em->flush();

                $em = $this -> getDoctrine() -> getManager();
                $rdv = $em -> getRepository('AppBundle:RDV')->find($id);
                $em->remove($rdv);
                $em->flush();

                $this->addFlash(
                'notice',
                'Consultation crée avec succès'
                );
                return $this->redirectToRoute('Gestionconsultation');
                }
        }
        return $this->render('Cabinet/créerconsultation.html.twig', array(
        'form' => $form->createView()));
    }
    
    /**
     * @Route("/Cabinet/Administration/Gestionconsultation/edit/{id}", name="editconsultations")
     */
    public function EditconsultationAction($id, Request $request)
    {

        $consultation = $this -> getDoctrine()
        -> getRepository('AppBundle:Consultation')
        -> find($id);

        $date = $consultation->getDateConsult();
        $consultation->setCin($consultation->getCin());
        $consultation->setType($consultation->getType());
        $consultation->setMaladie($consultation->getMaladie());
        $consultation->setDateConsult($consultation->getDateConsult());
        $consultation->setDescription($consultation->getDescription());
        $consultation->setFile(new File($this->getParameter('files_directory').'/'.$consultation->getFile()));

        $form = $this->createFormBuilder($consultation)
        ->add('type',ChoiceType::class, array('label' => 'Type', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('Examen' => 'Examen' ,'Controle' => 'Controle', 'Traitement' => 'Traitement'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
        ->add('date_consult', TextType::class, array('label' => 'Date','attr' => array('class' => 'form-control','placeholder' => $date, 'disabled' => 'true', 'style' => 'margin-bottom:15px')))
        ->add('maladie', TextType::class, array('attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px')))
        ->add('description', TextareaType::class, array('attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px')))     
        ->add('file', FileType::class, array('label' => 'Fichiers', 'attr' => array('class' => 'form-control' , 'style' => 'margin-bottom:15px'),'required' => false))       
        ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
        ->getForm();

        $form ->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){

        $cin = $consultation->getCin();
        $type = $form['type']->getData();
        $description = $form['description']->getData();
        $maladie = $form['maladie']->getData();
        $file = $form['file']->getData();
        

            if ($file <> null){
                /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
                $file->move(
                $this->getParameter('files_directory'),
                $fileName);
                $consultation->setFile($fileName);
                $consultation->setCin($cin);
                $consultation->setMaladie($maladie);
                $consultation->setDescription($description);
                $consultation->setType($type);
                $consultation->setDateConsult($date);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($consultation);
                $em->flush();

                $this->addFlash(
                'notice',
                'Consultation modifié avec succès'
                );
                return $this->redirectToRoute('voirconsultations');

            }else{

                $consultation->setCin($cin);
                $consultation->setMaladie($maladie);
                $consultation->setDescription($description);
                $consultation->setType($type);
                $consultation->setDateConsult($date);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($consultation);
                $em->flush();

                $this->addFlash(
                'notice',
                'Consultation modifié avec succès'
                );
                return $this->redirectToRoute('voirconsultations');
                }
        }
        return $this->render('Cabinet/editconsultation.html.twig', array(
        'form' => $form->createView(),
        'consultation' => $consultation
        ));
    }

    /**
     * @Route("/Cabinet/Administration/Gestionconsultation/delete/{id}", name="deleteconsultation")
     */
    public function DeleteconsultAction($id, Request $request)
    {

       $em = $this -> getDoctrine() -> getManager();
       $consultation = $em -> getRepository('AppBundle:Consultation')->find($id);
       $em->remove($consultation);
       $em->flush();

      $this->addFlash(
      'notice',
      'Consultation été supprimer avec succès'
      );
      return $this->redirectToRoute('voirconsultations');

    }
     

    /**
     * @Route("/Cabinet/Administration/Gestionconsultation/voir/", name="voirconsultations")
     */ 
     public function VoirconsultsAction()
     {

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM fos_user where fos_user.cin <> :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', '');
        $statement->execute();
        $users = $statement->fetchAll();

        return $this->render('Cabinet/voirconsultations.html.twig', array(
        'users'=>$users));  

     }       


    /**
     * @Route("/Cabinet/Administration/Gestionconsultation/voir/{cin}", name="voirconsultation")
     */ 
     public function VoirconsultAction($cin, Request $request)
     {

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM Consultation where Consultation.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $cin);
        $statement->execute();
        $consults = $statement->fetchAll();

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM fos_user where fos_user.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $cin);
        $statement->execute();
        $users = $statement->fetchAll();

        return $this->render('Cabinet/voirconsultation.html.twig', array(
        'consults'=>$consults, 'users'=>$users ));  

     }

     /**
     * @Route("/Cabinet/Administration/Gestionconsultation/voirconsult/{id}", name="voirconsult")
     */ 
     public function VoirconsultuAction($id, Request $request)
     {

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM Consultation where Consultation.id = :id;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('id', $id);
        $statement->execute();
        $consults = $statement->fetchAll();

        return $this->render('Cabinet/voirconsult.html.twig', array(
        'consults'=>$consults));  

     }

    /**
     * @Route("/voirmafiche", name="voirmafiche")
     */
    public function VoirmaficheAction()
    {
        $c = $this->getUser()->getCin();
        $id = $this->getUser()->getId();

        $user = $this->getDoctrine()
        ->getRepository('AppBundle:User')
        ->find($id);

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM mutuelle where mutuelle.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $c);
        $statement->execute();
        $result = $statement->fetchAll();

        foreach ($result as $key => $value) {
            foreach ($value as $key1 => $value1) {
                $mutuelle=$value;
            }
        }

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM consultation where consultation.cin = :c;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('c', $c);
        $statement->execute();
        $consultations = $statement->fetchAll();



        return $this->render('Cabinet/voirmafiche.html.twig' , array(
        'user'=>$user, 'mutuelle' => $mutuelle, 'consultations'=>$consultations
        ));

    }

    /**
     * @Route("/voirmaconsult/{id}", name="voirmaconsult")
     */ 
     public function VoirmaconsultAction($id, Request $request)
     {

        $em = $this->getDoctrine()->getManager();
        $RAW_QUERY = 'SELECT * FROM Consultation where Consultation.id = :id;';
        $statement = $em->getConnection()->prepare($RAW_QUERY);
        $statement->bindValue('id', $id);
        $statement->execute();
        $consults = $statement->fetchAll();

        return $this->render('Cabinet/voirmaconsult.html.twig', array(
        'consults'=>$consults));  

     }

    /**
     * @Route("/PrendreRDV", name="Prendrerdv")
     */
    public function RDVAction(Request $request)
    {
            $cin = $this->getUser()->getCin();
            $prenom = $this->getUser()->getPrenom();
            $nom = $this->getUser()->getNom();
            $form['prenom'] = $prenom;
            $form['nom'] = $nom;
            $form['cin'] = $cin;

                $em = $this->getDoctrine()->getManager();
                $RAW_QUERY = 'SELECT * FROM r_d_v where r_d_v.cin = :c ;';
                $statement = $em->getConnection()->prepare($RAW_QUERY); 
                $statement->bindValue('c', $cin);
                $statement->execute();
                $result = $statement->fetchAll();
                                        
                if ($result <> null) {
                foreach ($result as $key1 => $value1) {
                    foreach ($value1 as $key2 => $value2) {
                        $d = $value1['date_rdv'];
                        $s = $value1['seance'];
                            }
                        }
                    return $this->render('Cabinet/HAVERDV.html.twig', array('value1' => $value1));
                }else{

            $rdv = new RDV;
            $form = $this->createFormBuilder($rdv)
              ->add('prenom', TextType::class, array('attr' => array('class' => 'form-control' , 'placeholder' => $prenom , 'disabled' => 'true' , 'style' => 'margin-bottom:15px')))
              ->add('nom', TextType::class, array('attr' => array('class' => 'form-control', 'placeholder' => $nom , 'disabled' => 'true' , 'style' => 'margin-bottom:15px'))) 
              ->add('cin', TextType::class, array('attr' => array('class' => 'form-control', 'placeholder' => $cin ,'disabled' => 'true' , 'style' => 'margin-bottom:15px'))) 
              ->add('num_tel', TextType::class, array('attr' => array('class' => 'form-control', 'placeholder' => 'Numéro de téléphone' , 'style' => 'margin-bottom:15px')))
              ->add('date_rdv', DateType::class, array('input' => 'string', 'widget' => 'single_text', 'format' => 'yyyy-MM-dd','attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px')))
              ->add('seance',ChoiceType::class, array('label' => 'Séance', 'attr' => array('class' => 'form-control', 'style' => 'margin-bottom:15px'), 'choices' => array('Séance 1' => 'S1' ,'Séance 2' => 'S2','Séance 3' => 'S3','Séance 4 ' => 'S4','Séance 5' => 'S5','Séance 6' => 'S6','Séance 7' => 'S7','Séance 8' => 'S8'),'choices_as_values' => true,'multiple'=>false,'expanded'=>false))
              ->add('submit', SubmitType::class, array('label' => 'Valider', 'attr' => array('class' => 'btn btn-success', 'style' => 'margin-bottom:15px')))
              ->getForm();
              
              $form ->handleRequest($request);

              if($form->isSubmitted() && $form->isValid()){
                
                $num_tel = $form['num_tel']->getData();
                $date_rdv = $form['date_rdv']->getData();
                $seance = $form['seance']->getData();

                $em1 = $this->getDoctrine()->getManager();
                $RAW_QUERY1 = 'SELECT r_d_v.seance FROM r_d_v WHERE r_d_v.date_rdv = :d ;';
                $statement1 = $em1->getConnection()->prepare($RAW_QUERY1);
                $statement1->bindValue('d', $date_rdv);
                $statement1->execute();
                $result1 = $statement1->fetchAll();

                $sv = true ;

                foreach ($result1 as $key => $value) {
                if (in_array($seance, $value)){
                    $sv = false ;
                }
            }

                if ($sv == false) {
                    $this->addFlash(
                    'notice',
                    'Cette séance est déjas réserver !'
                    );
                }else{

                $rdv->setPrenom($prenom);
                $rdv->setNom($nom);
                $rdv->setCin($cin);
                $rdv->setNumTel($num_tel);
                $rdv->setDateRdv($date_rdv);
                $rdv->setSeance($seance);

                $em = $this -> getDoctrine() -> getManager();
                $em->persist($rdv);
                $em->flush();   

                return $this->redirectToRoute('Prendrerdv');
                }

        return $this->render('Cabinet/RDV.html.twig', array(
            'form' => $form->createView()
             ));
            }    
        }
            return $this->render('Cabinet/RDV.html.twig', array(
            'form' => $form->createView()
             ));
    }
}
?>
